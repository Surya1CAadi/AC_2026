/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    vector<ListNode*> splitListToParts(ListNode* head, int k) {
        // if(head==NULL||k==1)
        // return head;
       int n=0;
       ListNode*temp=head;
       while(temp){
           n++;
           temp=temp->next;
       }
       temp=head;
       ListNode*curr=head;
       int a=n/k,b=n%k;
       vector<ListNode*>arr;
       while(k--){
           ListNode*ans=curr;
           int c=a;
           while(curr&&c){
               c--;
               temp=curr;
               curr=curr->next;
           }
           if(curr&&b){
               b--;
                temp=curr;
               curr=curr->next;
           }
           if(temp!=NULL)
          temp->next=NULL;
           arr.push_back(ans);
       }
       return arr;
    }
};