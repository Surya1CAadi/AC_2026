/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {

        if (head == NULL || head->next == NULL)
            return head;
        ListNode* temp = head;
        if (temp->next->next == NULL && (temp->next)->val == temp->val)
            return NULL;

        ListNode* pre =  new ListNode(111,head);
        head=pre;
         while (temp != NULL &&temp->next != NULL) {
                    if ( temp->next != NULL&&temp->val == (temp->next)->val)  {
                        while(temp->next!=NULL&&temp->val == (temp->next)->val)
                         temp = temp->next;
                        pre->next = temp->next;
                    }
                    else
                        pre=pre->next;
                
                temp = temp->next;
                }       
      
        return head->next;
    }
};