/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        ListNode *head1=headA,*head2=headB;
        //BRUTE FORCE solution
        // while(head1!=0){
        //     while(head2!=NULL){
        //         if(head1==head2)
        //         return head1;
        //         head2=head2->next;
        //     }
        //     head2=headB;
        //     head1=head1->next;
        // }
        // return NULL;
        

        // THODA SA OPTIMISE HUA HAI
        unordered_map<ListNode*,int>arr;
         while(head1!=NULL){
             arr[head1]=1;
             head1=head1->next;
         }
         while(head2!=NULL){
             arr[head2]*=-1;
             head2=head2->next;
         }
         head1=headA,head2=headB;
         while(head1!=NULL){
             if(arr[head1]==-1)
             return head1;
             head1=head1->next;
         }
         return NULL;
    }
};