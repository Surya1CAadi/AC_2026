class Solution {
public:
    int possible(vector<int>&nums,int k,int mid){
        int a=0,c=1;
        for(int i=0;i<nums.size();i++){
            if(a+nums[i]<=mid){
                a+=nums[i];
            }
            else{
                a=nums[i];
                c++;
            }
            if(nums[i]>mid||c>k)
            return 0;
        }            
            return 1;
    }
    int splitArray(vector<int>& nums, int k) {
        int sum=0;
        for(int i=0;i<nums.size();i++){
            sum+=nums[i];
        }
        if(k==1)
        return sum;
        int s=0,e=sum,ans=0;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(possible(nums,k,mid)==1){
                ans=mid;
                e=mid-1;
            }
            else 
                s=mid+1;
        }
        return ans;
    }
};