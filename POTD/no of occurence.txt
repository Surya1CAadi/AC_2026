int lowerbound(int arr[], int n, int x){
	    int s=0,e=n-1;
	    int mid,ans=-1;
	    while(s<=e){
	        mid=s+(e-s)/2;
	        if(arr[mid]==x){
	        ans=mid;
	        e=mid-1;
	        }
	        else if(arr[mid]>x)
	        e=mid-1;
	        else
	        s=mid+1;
	    }
	    return ans;
	}
	int upperbound(int arr[], int n, int x){
	     int s=0,e=n-1;
	    int mid,ans=-1;
	    while(s<=e){
	        mid=s+(e-s)/2;
	        if(arr[mid]==x){
	            ans=mid;
	            s=mid+1;
	        }
	       else if(arr[mid]>x)
	        e=mid-1;
	        else
	        s=mid+1;
	    }
	    return ans;
	}
	int count(int arr[], int n, int x) {
	    // code here
	    if(upperbound(arr,n,x)==-1)
	    return 0;
	    return upperbound(arr,n,x)-lowerbound(arr,n,x)+1;
	}