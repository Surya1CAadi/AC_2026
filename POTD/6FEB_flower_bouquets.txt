class Solution {
public:
bool poss(vector<int>& b, int m, int k,int mid){
    int M=0,K=0;
    for(int i=0;i<b.size();i++){
        if(b[i]<=mid)
        K++;
        else
        K=0;
        if(k==K){
            K=0;
            M++;
        }
    if(M==m)
    return 1;
    }
    return 0;
}
    int minDays(vector<int>& bD, int m, int k) {
        if(m>bD.size()/k)
        return -1;
        int s=0,e=*max_element(bD.begin(),bD.end()),ans=0;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(poss(bD,m,k,mid)){
                ans=mid;
                e=mid-1;
            }
            else
            s=mid+1;
        }
        return ans;
    }
};