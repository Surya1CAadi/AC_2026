/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        ListNode *slow=head,*fast=head;
        if(head==NULL||head->next==NULL)
        return 0;
int i=0;
        while(fast!=NULL&&fast->next!=NULL){
            fast=fast->next->next;
                slow=slow->next;
            if(slow==fast ){
                return 1;
            }
        }

// int i=0;
//         while(fast!=NULL&&i<=10000){
//             i++;
//             fast=fast->next;
//             while(fast!=NULL&&i<=10000){
//                 i++;
//                 slow=slow->next;
//                 fast=fast->next;
//             }
//             if(slow==fast || i>10000){
//                 return 1;
//             }
//         }


        return 0;
    }
};