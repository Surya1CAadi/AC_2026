// using binary serach;;;
class Solution {
public:
    bool ifposs(vector<int>&arr,int mid,int h){
        int sum=0,i=0;
        while(i<arr.size()){
            if(arr[i]%mid==0)
            sum+=arr[i]/mid;
            else
            sum+=arr[i]/mid+1;
            if(sum>h)
            return 0;
            i++;
        }
        return 1;
    }
    int minEatingSpeed(vector<int>& piles, int h) {
        int ans=0,s=1,e=*max_element(piles.begin(), piles.end());
        while(s<=e){
            int mid=s+(e-s)/2;
            if(ifposs(piles,mid,h)){
                ans=mid;
            e=mid-1;
            }
            else
            s=mid+1;
        }
        return ans;
    }
};