  void merge(int arr[], int l,int r){
         int mid =l+(r-l)/2;
         int l1=mid-l+1;
        int l2=r-mid;
        int *ar1=new int[l1];
        int *ar2=new int[l2];
        int k=l;
        for(int i=0;i<l1;i++){
            ar1[i]=arr[k++];
        }
        for(int i=0;i<l2;i++){
            ar2[i]=arr[k++];
        }
        int i=0,j=0;
        while(i<l1&&j<l2){
            if(ar1[i]<=ar2[j]){
                arr[l++]=ar1[i];
                i++;
            }
           else{
                arr[l++]=ar2[j];
                j++;
            }
        }
        while(i<l1){
                arr[l++]=ar1[i];
                i++;
        }
        while(j<l2){
                arr[l++]=ar2[j];
                j++;
        }
    }
    public:
    void mergeSort(int arr[], int l, int r)
    {
        //code here
        if(l>=r)
        return;
        int mid =l+(r-l)/2;
        mergeSort(arr,l,mid);
        mergeSort(arr,mid+1,r);
        merge(arr,l,r);
    }