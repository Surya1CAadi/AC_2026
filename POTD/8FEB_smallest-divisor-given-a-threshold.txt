class Solution {
public:
bool ispossible(vector<int>&arr,int k,int mid){
    int n=arr.size(),s=0;
    for(int i=0;i<n;i++){
        s+=arr[i]%mid==0?arr[i]/mid:arr[i]/mid+1;
        if(s>k)
        return 0;
    }
    return 1;
}
    int smallestDivisor(vector<int>& nums, int threshold) {
        int e=*max_element(nums.begin(),nums.end());
        int s=1,ans;
        while(s<=e){
                int mid=s+(e-s)/2;
            if(ispossible(nums,threshold,mid)){
                ans=mid;
                e=mid-1;
            }
            else
            s=mid+1;
        }
        return ans;
    }
};